name: amur-dev-deploy
on:
  push:
    branches:
      - master

  pull_request:
    types: [opened, synchronize]
    branches:
      - master

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: "Version"
        uses: proxima-one/github-workflows/.github/workflows/version.yml@master
        with:
          appName: state-manager
          dockerRepo: "proxima.one/services"
        secrets:
          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}

  publish:
    needs: version
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Docker Login"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: "Build and push image"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./deployment/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: BUILD_VERSION=${{ needs.version.outputs.version }}
          tags: ${{ secrets.DOCKER_REGISTRY_URL }}${{ needs.version.outputs.imageId }}
          # Reuse docker cache across Github Actions runs
          # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#cache-backend-api
          cache-from: type=gha
          cache-to: type=gha,mode=max

  pulumi:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.base_ref == 'master') }}
    needs: [version, publish]
    uses: proxima-one/github-workflows/.github/workflows/pulumi-service.yml@master
    with:
      stack: "proxima-one/amur-dev"
      pulumiPath: ./deployment
      preview: ${{ github.event_name == 'pull_request' }}
      publishedImageId: ${{ needs.version.outputs.imageId }}
      publishedVersion: ${{ needs.version.outputs.version }}
    secrets:
      DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
      CI_NPM_TOKEN: ${{ secrets.CI_NPM_TOKEN }}
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
