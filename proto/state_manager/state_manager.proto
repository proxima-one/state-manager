syntax = "proto3";
package state_manager;

service StateManagerService {
  rpc InitApp(InitAppRequest) returns (InitAppResponse);
  rpc Get(GetRequest) returns (GetResponse);
  rpc Set(SetRequest) returns (SetResponse);
  rpc Checkpoints(CheckpointsRequest) returns (CheckpointsResponse);
  rpc CreateCheckpoint(CreateCheckpointRequest) returns (CreateCheckpointResponse);
  rpc Revert(RevertRequest) returns (RevertResponse);
  rpc Cleanup(CleanupRequest) returns (CleanupResponse);
  rpc Reset(ResetRequest) returns (ResetResponse);
  rpc RemoveApp(RemoveAppRequest) returns (RemoveAppResponse);
  rpc UploadSnapshot(UploadSnapshotRequest) returns (UploadSnapshotResponse);
}


message InitAppRequest {
  string app_id = 1;
}

message InitAppResponse {
  string etag = 1;
}

message GetRequest {
  string app_id = 1;
  repeated string keys = 2;
}

message GetResponse {
  string etag = 1;
  repeated Part parts = 2;
}

message SetRequest {
  string app_id = 1;
  string etag = 2;
  repeated Part parts = 3;
}

message SetResponse {
  string etag = 1;
}

message CheckpointsRequest {
  string app_id = 1;
}

message CheckpointsResponse {
  string etag = 1;
  repeated Checkpoint checkpoints = 2;
}

message CreateCheckpointRequest {
  string app_id = 1;
  string etag = 2;
  string payload = 3;
}

message CreateCheckpointResponse {
  string etag = 1;
  string id = 2;
}

message RevertRequest {
  string app_id = 1;
  string etag = 2;
  string checkpoint_id = 3;
}

message RevertResponse {
  string etag = 1;
}

message CleanupRequest {
  string app_id = 1;
  string etag = 2;
  string until_checkpoint = 3;
}

message CleanupResponse {
  string etag = 1;
}

message ResetRequest {
  string app_id = 1;
  string etag = 2;
}

message ResetResponse {
  string etag = 1;
}

message RemoveAppRequest {
  string app_id = 1;
  string admin_token = 2;
}

message RemoveAppResponse {
}

message UploadSnapshotRequest {
  string app_id = 1;
}

message UploadSnapshotResponse {
  string snapshot_id = 1;
}


message Part {
  string key = 1;
  bytes value = 2;
}

message Checkpoint {
  string id = 1;
  string payload = 2;
}
